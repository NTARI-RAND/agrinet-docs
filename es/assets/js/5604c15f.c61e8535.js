"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[6931],{8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},9472:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api-testing","title":"API Testing Playbook","description":"This playbook outlines how to validate Agrinet backend services using curl and shell scripts.","source":"@site/docs/api-testing.md","sourceDirName":".","slug":"/api-testing","permalink":"/es/docs/api-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/NTARI-RAND/agrinet-docs/docs/api-testing.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"API Testing Playbook","sidebar_position":4},"sidebar":"tutorial","previous":{"title":"Federation Deployment & Launch Kit","permalink":"/es/docs/federation-guide"},"next":{"title":"Create a Document","permalink":"/es/docs/tutorial-basics/create-a-document"}}');var i=s(4848),r=s(8453);const o={title:"API Testing Playbook",sidebar_position:4},l=void 0,c={},d=[{value:"Service Ports &amp; Endpoints",id:"service-ports--endpoints",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Core Endpoints",id:"core-endpoints",level:2},{value:"Health Check",id:"health-check",level:3},{value:"Create Conversation",id:"create-conversation",level:3},{value:"Send Message",id:"send-message",level:3},{value:"Get Messages",id:"get-messages",level:3},{value:"Streaming (SSE)",id:"streaming-sse",level:3},{value:"Common Errors",id:"common-errors",level:2},{value:"Troubleshooting Checklist",id:"troubleshooting-checklist",level:2},{value:"Example Test Script",id:"example-test-script",level:2},{value:"Backend vs Frontend",id:"backend-vs-frontend",level:2},{value:"Reporting Issues",id:"reporting-issues",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This playbook outlines how to validate Agrinet backend services using ",(0,i.jsx)(n.code,{children:"curl"})," and shell scripts."]}),"\n",(0,i.jsx)(n.h2,{id:"service-ports--endpoints",children:"Service Ports & Endpoints"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Service"}),(0,i.jsx)(n.th,{children:"Port"}),(0,i.jsx)(n.th,{children:"Usage"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Backend"}),(0,i.jsx)(n.td,{children:"5000"}),(0,i.jsx)(n.td,{children:"API requests"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Frontend"}),(0,i.jsx)(n.td,{children:"3000"}),(0,i.jsx)(n.td,{children:"Next.js UI"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Always target port ",(0,i.jsx)(n.code,{children:"5000"})," when testing the backend APIs unless your deployment specifies otherwise."]})}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"Most endpoints require an API key:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:5000/conversations \\\n  -H "Content-Type: application/json" \\\n  -H "x-api-key: da2-5z3fzvunwvhwtbyudvutf6x6by" \\\n  -d "{"title": "Chat QA Demo"}"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you receive ",(0,i.jsx)(n.code,{children:'{"error":"Unauthorized: Invalid API Key"}'}),", verify that the key is present, valid, and loaded by the backend."]}),"\n",(0,i.jsx)(n.h2,{id:"core-endpoints",children:"Core Endpoints"}),"\n",(0,i.jsx)(n.h3,{id:"health-check",children:"Health Check"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X GET http://localhost:5000/health\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Expected output: ",(0,i.jsx)(n.code,{children:'{"status":"ok"}'}),". A HTML response indicates that the endpoint may be missing or you hit the wrong port."]}),"\n",(0,i.jsx)(n.h3,{id:"create-conversation",children:"Create Conversation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:5000/conversations \\\n  -H "Content-Type: application/json" \\\n  -H "x-api-key: <your-key>" \\\n  -d "{"title": "Chat QA Demo"}"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Expected output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "<conversationId>",\n  "title": "Chat QA Demo"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"send-message",children:"Send Message"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:5000/messages/<conversationId> \\\n  -H "Content-Type: application/json" \\\n  -H "x-api-key: <your-key>" \\\n  -d "{"from":"user","to":"assistant","type":"text","content":"Hello Agrinet!"}"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"get-messages",children:"Get Messages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET http://localhost:5000/messages/<conversationId> \\\n  -H "x-api-key: <your-key>"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"streaming-sse",children:"Streaming (SSE)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -N http://localhost:5000/stream/<conversationId> \\\n  -H "Accept: text/event-stream" \\\n  -H "x-api-key: <your-key>"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"common-errors",children:"Common Errors"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Output"}),(0,i.jsx)(n.th,{children:"Action"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<html>Cannot GET/POST ...</html>"})}),(0,i.jsx)(n.td,{children:"Wrong port or endpoint not implemented"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'{"error":"Unauthorized: Invalid API Key"}'})}),(0,i.jsx)(n.td,{children:"Missing or invalid key"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"404: This page could not be found."})}),(0,i.jsx)(n.td,{children:"Accessed frontend instead of backend"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"zsh: no such file or directory: conversationId"})}),(0,i.jsx)(n.td,{children:"Did not replace placeholder"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"curl: (3) URL rejected: Port number ..."})}),(0,i.jsx)(n.td,{children:"Malformed URL"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting-checklist",children:"Troubleshooting Checklist"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Confirm the backend is listening on port ",(0,i.jsx)(n.code,{children:"5000"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Double-check that environment variables include the correct API keys."}),"\n",(0,i.jsx)(n.li,{children:"Use the correct HTTP verb and endpoint path."}),"\n",(0,i.jsxs)(n.li,{children:["Replace placeholders such as ",(0,i.jsx)(n.code,{children:"<conversationId>"})," with actual values."]}),"\n",(0,i.jsxs)(n.li,{children:["Pipe responses through ",(0,i.jsx)(n.code,{children:"jq"})," for readability: ",(0,i.jsx)(n.code,{children:"curl ... | jq"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-test-script",children:"Example Test Script"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/usr/bin/env bash\n\nAPI="http://localhost:5000"\nKEY="da2-5z3fzvunwvhwtbyudvutf6x6by"\n\necho "Health check..."\ncurl -sS "$API/health" | jq\n\necho "Create conversation..."\nCONV_ID=$(curl -sS -X POST "$API/conversations" \\\n  -H "Content-Type: application/json" \\\n  -H "x-api-key: $KEY" \\\n  -d "{"title":"Test"}" | jq -r .id)\n\necho "Send message..."\ncurl -sS -X POST "$API/messages/$CONV_ID" \\\n  -H "Content-Type: application/json" \\\n  -H "x-api-key: $KEY" \\\n  -d "{"from":"user","to":"assistant","type":"text","content":"Hello!"}" | jq\n\necho "Get messages..."\ncurl -sS "$API/messages/$CONV_ID" \\\n  -H "x-api-key: $KEY" | jq\n'})}),"\n",(0,i.jsx)(n.h2,{id:"backend-vs-frontend",children:"Backend vs Frontend"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"localhost:3000"})," serves the Next.js frontend and returns HTML."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"localhost:5000"})," serves the backend API and returns JSON."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"reporting-issues",children:"Reporting Issues"}),"\n",(0,i.jsx)(n.p,{children:"When you encounter problems:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Inspect backend logs."}),"\n",(0,i.jsx)(n.li,{children:"Validate that required environment variables are present."}),"\n",(0,i.jsxs)(n.li,{children:["Share the ",(0,i.jsx)(n.code,{children:"curl"})," command and full response in your issue report."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For deeper examples, review the Fruitful ",(0,i.jsx)(n.a,{href:"https://github.com/NTARI-OpenCoreLab/Agrinet/tree/main/backend",children:"backend"})," and ",(0,i.jsx)(n.a,{href:"https://github.com/NTARI-OpenCoreLab/Agrinet/tree/main/frontend",children:"frontend"})," repositories."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);